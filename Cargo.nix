# Generated by carnix 0.10.2: carnix generate-nix --src .
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
rec {
  crates_io = recursiveUpdate cratesIO rec {
# exit-0.1.0

    crates.exit."0.1.0" = deps: { features?(features_."exit"."0.1.0" deps {}) }: buildRustCrate {
      crateName = "exit";
      version = "0.1.0";
      authors = [ "Corin Lawson <corin@phiware.com.au>" ];
      edition = "2018";
      src = fetchgit {
         url = "https://github.com/au-phiware/exit";
         rev = "a625f26bd55b27f27ddf4c7859b5ca826ec06720";
         sha256 = "06hsg98qnn87x1yv8k21nswlf744vbj0ng51jfdx9svhjb09s6sy";
         fetchSubmodules = false;
      };
    };
    features_."exit"."0.1.0" = deps: f: updateFeatures f (rec {
      exit."0.1.0".default = (f.exit."0.1.0".default or true);
    }) [];


# end

# sdl-mandelbrot-0.1.0

    crates.sdl_mandelbrot."0.1.0" = deps: { features?(features_."sdl_mandelbrot"."0.1.0" deps {}) }: buildRustCrate {
      crateName = "sdl-mandelbrot";
      version = "0.1.0";
      authors = [ "Corin Lawson <corin@phiware.com.au>" ];
      edition = "2018";
      src = exclude [ ".git" "target" ] ./.;
      dependencies = mapFeatures features ([
        (crates."exit"."${deps."sdl_mandelbrot"."0.1.0"."exit"}" deps)
        (cratesIO.crates."num_complex"."${deps."sdl_mandelbrot"."0.1.0"."num_complex"}" deps)
        (cratesIO.crates."num_traits"."${deps."sdl_mandelbrot"."0.1.0"."num_traits"}" deps)
        (cratesIO.crates."sdl2"."${deps."sdl_mandelbrot"."0.1.0"."sdl2"}" deps)
      ]);
    };
    features_."sdl_mandelbrot"."0.1.0" = deps: f: updateFeatures f (rec {
      exit."${deps.sdl_mandelbrot."0.1.0".exit}".default = true;
      num_complex."${deps.sdl_mandelbrot."0.1.0".num_complex}".default = true;
      num_traits."${deps.sdl_mandelbrot."0.1.0".num_traits}".default = true;
      sdl2."${deps.sdl_mandelbrot."0.1.0".sdl2}".default = true;
      sdl_mandelbrot."0.1.0".default = (f.sdl_mandelbrot."0.1.0".default or true);
    }) [
      (f: if deps."sdl_mandelbrot"."0.1.0" ? "exit" then features_.exit."${deps."sdl_mandelbrot"."0.1.0"."exit" or ""}" deps f else f)
      (f: if deps."sdl_mandelbrot"."0.1.0" ? "num_complex" then cratesIO.features_.num_complex."${deps."sdl_mandelbrot"."0.1.0"."num_complex" or ""}" deps f else f)
      (f: if deps."sdl_mandelbrot"."0.1.0" ? "num_traits" then cratesIO.features_.num_traits."${deps."sdl_mandelbrot"."0.1.0"."num_traits" or ""}" deps f else f)
      (f: if deps."sdl_mandelbrot"."0.1.0" ? "sdl2" then cratesIO.features_.sdl2."${deps."sdl_mandelbrot"."0.1.0"."sdl2" or ""}" deps f else f)
    ];


# end

    crates.exit.default = crates.exit."0.1.0";
    features_.exit.default = features_.exit."0.1.0";

    crates.sdl_mandelbrot.default = crates.sdl_mandelbrot."0.1.0";
    features_.sdl_mandelbrot.default = features_.sdl_mandelbrot."0.1.0";


  };

  sdl_mandelbrot = crates_io.crates.sdl_mandelbrot."0.1.0" deps;
  __all = [ (sdl_mandelbrot {}) ];
  deps.autocfg."1.0.0" = {};
  deps.bitflags."1.2.1" = {};
  deps.cfg_if."0.1.10" = {};
  deps.exit."0.1.0" = {};
  deps.lazy_static."1.4.0" = {};
  deps.libc."0.2.66" = {};
  deps.num_complex."0.2.4" = {
    num_traits = "default";
    autocfg = "default";
  };
  deps.num_traits."0.2.11" = {
    autocfg = "default";
  };
  deps.sdl_mandelbrot."0.1.0" = {
    exit = "default";
    num_complex = "default";
    num_traits = "default";
    sdl2 = "default";
  };
  deps.sdl2."0.33.0" = {
    bitflags = "default";
    lazy_static = "default";
    libc = "default";
    sdl2_sys = "default";
  };
  deps.sdl2_sys."0.33.0" = {
    libc = "default";
    cfg_if = "default";
  };
}
